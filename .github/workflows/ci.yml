name: CIQ Py SDK Integration Tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch: # Optional, allows manual triggering
  schedule:
    # Run every hour
    - cron: "0 * * * *"

permissions:
  contents: write

jobs:
  integration-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r examples/dev-requirements.txt

      - name: Run flake8 (lint)
        run: |
          echo "Running flake8..."
          flake8 src --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 src --count --exit-zero --max-complexity=20 --max-line-length=120 --statistics

      - name: Run black (format check)
        run: |
          echo "Checking black formatting..."
          black --check .

      - name: Set up Git
        run: |
          git config user.name "github-actions"
          git config user.email "actions@github.com"

      - name: Checkout reports branch and copy report.json
        run: |
          git checkout ci-reports
          cp report/report.json /tmp/report.json

      - name: Switch back to main and copy JSON
        run: |
          git checkout main
          cp /tmp/report.json report/report.json

      - name: Run All Example Scripts
        env:
          API_KEY: ${{ secrets.API_KEY }}
          COHERE_API_KEY: ${{ secrets.COHERE_API_KEY }}
        run: |
          find examples -name "*.py" -exec python {} \;
          # python examples/cohere-inspector/compare.py
          # python examples/core-sanity/rag.py
          # pytest tests/integration --maxfail=1 --disable-warnings -q

      - name: Prepare report for GitHub Pages
        run: |
          mkdir -p public
          cp report/report.json public/index.json
          cp report/index.html public/index.html

      - name: Publish to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./public
          publish_branch: gh-pages

      - name: Commit and push report.json
        run: |
          git checkout ci-reports
          cp /tmp/report.json report/report.json
          git add report/report.json
          git commit -m "Update report.json [skip ci]" || echo "No changes"
          git push --force
